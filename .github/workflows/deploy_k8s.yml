# Deploys K8s cluster from K8s main.bicep

name: 1 Deploy K8s

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   inputs:
    clusterName:
      description: 'Cluster Name'
      required: true
      default: 'aks-demo-01'
    clusterLocation:
      description: 'azure region'
      required: true
      default: 'eastus'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Deploy"
  Deploy:
    # The type of runner that the job will run on
    defaults:
      run:
        working-directory: 'k8s'
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Azure Login
        uses: Azure/cli@v1.0.7
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Deploy bicep
        uses: Azure/cli@v1.0.7
        with:
          # Specify the script here
          inlineScript: |
           az account set --subscription ${{secrets.AZ_ADP_SUB2_ID}}
           az deployment sub create --location eastus --template-file '.\k8s\main.bicep' --parameters clusterName=${{ inputs.clusterName }} clusterLocation=${{ inputs.clusterLocation }} clusterAdminGroupId=${{ secrets.CLUSTER_ADMIN_GROUP_ID }} --name 'az-k8s-deploy-'$(date +"%d-%b-%Y-%Hh-%Mm-%Ss")
           
      - name: Enable additional CI Metrics
        uses: Azure/cli@v1.0.7
        with:
          inlineScript: |
           clientIdOfSPNOrMsi=`az aks show -g '${{ inputs.clusterName }}-rg' -n ${{ inputs.clusterName }} | jq .addonProfiles.omsagent.identity.objectId | tr -d '"'`
           clusterResourceId=`az aks show -g '${{ inputs.clusterName }}-rg' -n ${{ inputs.clusterName }} | jq .id | tr -d '"'`
           az role assignment create --assignee $clientIdOfSPNOrMsi --scope $clusterResourceId --role "Monitoring Metrics Publisher"
 
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
          # Resource Group Name
          resource-group: '${{ inputs.clusterName }}-rg'
          # AKS Cluster Name
          cluster-name: ${{ inputs.clusterName }}
          # AKS Cluster Subscription
          subscription: ${{secrets.AZ_ADP_SUB2_ID}}
          # Get cluster admin credentials. Values: true or false
          admin: 'true'   
 
      - name: Enable Promemtheus Scrapping
        run: |
         kubectl apply -f ./container-azm-ms-agentconfig.yaml
        working-directory: ./k8s/configs
      
                
